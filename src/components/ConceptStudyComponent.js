import { useState } from 'react';
import { BookOpen, Brain, Target, FileText, Plus } from 'lucide-react';

const ConceptStudyComponent = () => {
    const [conceptMode, setConceptMode] = useState('overview');
    const [showConceptModal, setShowConceptModal] = useState(false);
    const [selectedConcept, setSelectedConcept] = useState(null);

    // ÏÉòÌîå Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ (Ï±ïÌÑ∞Î≥Ñ Íµ¨ÏÑ±)
    const concepts = [
        {
            id: 1,
            title: 'Process Control Block',
            description: 'ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨ ÌïµÏã¨ Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞',
            pages: 'p.95-97',
            status: 'studying',
            chapter: 'Chapter 3. ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨',
            lastStudied: '2024-01-15',
            myNotes: {
                summary: 'PCBÎäî Í∞Å ÌîÑÎ°úÏÑ∏Ïä§Ïùò Ï†ïÎ≥¥Î•º Îã¥Í≥† ÏûàÎäî ÏûêÎ£åÍµ¨Ï°∞. ÌîÑÎ°úÏÑ∏Ïä§ ÏÉÅÌÉú, PID, Î©îÎ™®Î¶¨ Ï†ïÎ≥¥ Îì±ÏùÑ Ìè¨Ìï®.',
                keyPoints: ['Process ID (PID)', 'Process State', 'Program Counter', 'CPU Î†àÏßÄÏä§ÌÑ∞'],
                personalThoughts: 'Ïª®ÌÖçÏä§Ìä∏ Ïä§ÏúÑÏπ≠ Ïãú PCBÍ∞Ä ÌïµÏã¨ Ïó≠Ìï†ÏùÑ ÌïúÎã§Îäî Ï†êÏù¥ Ï§ëÏöî!'
            }
        },
        {
            id: 2,
            title: 'Context Switching',
            description: 'CPU ÌîÑÎ°úÏÑ∏Ïä§ Ï†ÑÌôò Î©îÏª§ÎãàÏ¶ò',
            pages: 'p.98-102',
            status: 'completed',
            chapter: 'Chapter 3. ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨',
            lastStudied: '2024-01-14',
            myNotes: {
                summary: 'CPUÍ∞Ä Ìïú ÌîÑÎ°úÏÑ∏Ïä§ÏóêÏÑú Îã§Î•∏ ÌîÑÎ°úÏÑ∏Ïä§Î°ú Ï†ÑÌôòÌïòÎäî Í≥ºÏ†ï. PCB Ï†ÄÏû•/Î≥µÏõêÏù¥ ÌïµÏã¨.',
                keyPoints: ['PCB Ï†ÄÏû•', 'PCB Î≥µÏõê', 'ÏãúÍ∞Ñ Ïò§Î≤ÑÌó§Îìú', 'ÌîÑÎ°úÏÑ∏Ïä§ Ïä§ÏºÄÏ§ÑÎßÅ'],
                personalThoughts: 'Ïò§Î≤ÑÌó§ÎìúÍ∞Ä ÌÅ¨ÎãàÍπå ÏµúÏ†ÅÌôîÍ∞Ä Ï§ëÏöîÌïòÍ≤†Îã§. Ïä§Î†àÎìúÎ•º Ïì∞Îäî Ïù¥Ïú†Í∞Ä Ïó¨Í∏∞Ïóê!'
            }
        },
        {
            id: 3,
            title: 'Thread Pool',
            description: 'Ïä§Î†àÎìú ÌíÄ Í¥ÄÎ¶¨ Í∏∞Î≤ï',
            pages: 'p.145-148',
            status: 'not_started',
            chapter: 'Chapter 4. Ïä§Î†àÎìú',
            lastStudied: null,
            myNotes: null
        },
        {
            id: 4,
            title: 'Mutex vs Semaphore',
            description: 'ÎèôÍ∏∞Ìôî Î©îÏª§ÎãàÏ¶ò ÎπÑÍµê',
            pages: 'p.201-205',
            status: 'studying',
            chapter: 'Chapter 6. ÎèôÍ∏∞Ìôî',
            lastStudied: '2024-01-16',
            myNotes: {
                summary: 'MutexÎäî 1Í∞ú ÏûêÏõê, SemaphoreÎäî NÍ∞ú ÏûêÏõê Í¥ÄÎ¶¨. Îëò Îã§ ÏÉÅÌò∏Î∞∞Ï†ú Íµ¨ÌòÑ.',
                keyPoints: ['Binary Semaphore = Mutex', 'Counting Semaphore', 'Lock/Unlock', 'Wait/Signal'],
                personalThoughts: 'ÏΩîÎìúÎ°ú ÏßÅÏ†ë Íµ¨ÌòÑÌï¥Î≥¥Î©¥ÏÑú Ïù¥Ìï¥ÌïòÎäîÍ≤å Ï¢ãÏùÑ Í≤É Í∞ôÎã§.'
            }
        },
        {
            id: 5,
            title: 'Deadlock Prevention',
            description: 'ÍµêÏ∞©ÏÉÅÌÉú ÏòàÎ∞© Í∏∞Î≤ï',
            pages: 'p.220-225',
            status: 'not_started',
            chapter: 'Chapter 6. ÎèôÍ∏∞Ìôî',
            lastStudied: null,
            myNotes: null
        }
    ];

    // Ï†ÑÏ≤¥ ÌÜµÍ≥Ñ Í≥ÑÏÇ∞
    const totalConcepts = concepts.length;
    const completedConcepts = concepts.filter(c => c.status === 'completed').length;
    const studyingConcepts = concepts.filter(c => c.status === 'studying').length;
    const overallProgress = Math.round((completedConcepts / totalConcepts) * 100);

    const renderConceptList = () => {
        // Ï±ïÌÑ∞Î≥ÑÎ°ú Í∞úÎÖêÎì§ Í∑∏Î£πÌôî
        const conceptsByChapter = concepts.reduce((acc, concept) => {
            const chapter = concept.chapter;
            if (!acc[chapter]) {
                acc[chapter] = [];
            }
            acc[chapter].push(concept);
            return acc;
        }, {});

        // Ï±ïÌÑ∞Î≥Ñ ÏôÑÎ£åÏú® Í≥ÑÏÇ∞
        const getChapterProgress = (chapterConcepts) => {
            const completed = chapterConcepts.filter(c => c.status === 'completed').length;
            const total = chapterConcepts.length;
            return { completed, total, percentage: Math.round((completed / total) * 100) };
        };

        const getStatusInfo = (status) => {
            switch(status) {
                case 'completed':
                    return { label: 'ÏôÑÎ£å', className: 'bg-green-100 text-green-800' };
                case 'studying':
                    return { label: 'ÌïôÏäµÏ§ë', className: 'bg-blue-100 text-blue-800' };
                default:
                    return { label: 'ÎØ∏ÏãúÏûë', className: 'bg-gray-100 text-gray-600' };
            }
        };

        return (
            <div className="space-y-6">
                <div className="flex items-center justify-between">
                    <h3 className="text-lg font-semibold text-gray-900">üìã Í∞úÎÖê Î™©Î°ù</h3>
                    <div className="text-sm text-gray-500">
                        Ï¥ù {concepts.length}Í∞ú Í∞úÎÖê | {concepts.filter(c => c.status === 'completed').length}Í∞ú ÏôÑÎ£å
                    </div>
                </div>
                {Object.entries(conceptsByChapter).map(([chapter, chapterConcepts]) => {
                    const progress = getChapterProgress(chapterConcepts);
                    return (
                        <div key={chapter} className="bg-white rounded-xl border border-gray-200 overflow-hidden">
                            <div className="bg-gradient-to-r from-indigo-50 to-blue-50 px-6 py-4 border-b border-gray-200">
                                <div className="flex items-center justify-between">
                                    <h4 className="font-semibold text-gray-900">{chapter}</h4>
                                    <div className="flex items-center space-x-3">
                                        <span className="text-sm text-gray-600">
                                            {progress.completed}/{progress.total} ÏôÑÎ£å
                                        </span>
                                        <div className="w-24 bg-gray-200 rounded-full h-2">
                                            <div 
                                                className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                                                style={{ width: `${progress.percentage}%` }}
                                            ></div>
                                        </div>
                                        <span className="text-sm font-medium text-blue-600">{progress.percentage}%</span>
                                    </div>
                                </div>
                            </div>
                            <div className="p-4 space-y-4">
                                {chapterConcepts.map((concept) => {
                                    const statusInfo = getStatusInfo(concept.status);
                                    return (
                                        <div key={concept.id} className="bg-gray-50 rounded-lg p-5 hover:bg-gray-100 transition-colors">
                                            <div className="flex items-start justify-between mb-3">
                                                <div className="flex-1">
                                                    <div className="flex items-center space-x-3 mb-2">
                                                        <h5 className="font-semibold text-gray-900">{concept.title}</h5>
                                                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${statusInfo.className}`}>
                                                            {statusInfo.label}
                                                        </span>
                                                    </div>
                                                    <p className="text-sm text-gray-600 mb-2">{concept.description}</p>
                                                    <div className="flex items-center space-x-4 text-xs text-gray-500 mb-3">
                                                        <span>{concept.pages}</span>
                                                        {concept.lastStudied && (
                                                            <span>ÎßàÏßÄÎßâ ÌïôÏäµ: {concept.lastStudied}</span>
                                                        )}
                                                    </div>
                                                </div>
                                                <div className="flex items-center space-x-2 ml-4">
                                                    <button 
                                                        onClick={() => {
                                                            setSelectedConcept(concept);
                                                            setConceptMode('cornell');
                                                        }}
                                                        className="text-blue-600 hover:text-blue-800 text-xs bg-blue-50 px-2 py-1 rounded"
                                                    >
                                                        ÏΩîÎÑ¨ÎÖ∏Ìä∏
                                                    </button>
                                                    <button className="text-gray-600 hover:text-gray-800 text-xs">Ìé∏Ïßë</button>
                                                </div>
                                            </div>
                                            {concept.myNotes ? (
                                                <div className="bg-white rounded-lg p-4 border border-gray-200">
                                                    <div className="mb-3">
                                                        <h6 className="text-sm font-medium text-gray-700 mb-1">üìù ÎÇ¥ Ï†ïÎ¶¨</h6>
                                                        <p className="text-sm text-gray-600 leading-relaxed">{concept.myNotes.summary}</p>
                                                    </div>
                                                    {concept.myNotes.keyPoints && (
                                                        <div className="mb-3">
                                                            <h6 className="text-sm font-medium text-gray-700 mb-2">üîë ÌïµÏã¨ ÌÇ§ÏõåÎìú</h6>
                                                            <div className="flex flex-wrap gap-1">
                                                                {concept.myNotes.keyPoints.map((point, index) => (
                                                                    <span key={index} className="bg-indigo-100 text-indigo-700 px-2 py-1 rounded text-xs">
                                                                        {point}
                                                                    </span>
                                                                ))}
                                                            </div>
                                                        </div>
                                                    )}
                                                    {concept.myNotes.personalThoughts && (
                                                        <div className="bg-yellow-50 border-l-3 border-yellow-400 p-3 rounded">
                                                            <h6 className="text-sm font-medium text-yellow-800 mb-1">üí° Í∞úÏù∏Ï†Å ÏÉùÍ∞Å</h6>
                                                            <p className="text-sm text-yellow-700 italic">{concept.myNotes.personalThoughts}</p>
                                                        </div>
                                                    )}
                                                </div>
                                            ) : (
                                                <div className="bg-white rounded-lg p-4 border border-gray-200 border-dashed">
                                                    <div className="text-center text-gray-400">
                                                        <p className="text-sm">ÏïÑÏßÅ Ï†ïÎ¶¨Îêú ÎÇ¥Ïö©Ïù¥ ÏóÜÏäµÎãàÎã§.</p>
                                                        <button 
                                                            onClick={() => {
                                                                setSelectedConcept(concept);
                                                                setConceptMode('cornell');
                                                            }}
                                                            className="text-blue-500 hover:text-blue-700 text-sm mt-1"
                                                        >
                                                            ÏßÄÍ∏à Ï†ïÎ¶¨ÌïòÍ∏∞ ‚Üí
                                                        </button>
                                                    </div>
                                                </div>
                                            )}
                                        </div>
                                    );
                                })}
                            </div>
                        </div>
                    );
                })}
            </div>
        );
    };

    const renderConceptMindMap = () => (
        <div className="space-y-4">
            <h3 className="text-lg font-semibold text-gray-900">üß† ÎßàÏù∏ÎìúÎßµ</h3>
            <div className="bg-gray-50 rounded-lg p-8 min-h-96 flex items-center justify-center">
                <div className="text-center text-gray-500">
                    <Target className="w-12 h-12 mx-auto mb-4 opacity-50" />
                    <p>ÎßàÏù∏ÎìúÎßµ Î∑∞Îäî Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§.</p>
                </div>
            </div>
        </div>
    );

    const renderCornellNotes = () => (
        <div className="space-y-4">
            <h3 className="text-lg font-semibold text-gray-900">üìù ÏΩîÎÑ¨ÎÖ∏Ìä∏</h3>
            {selectedConcept ? (
                <div className="bg-white rounded-lg border border-gray-200">
                    <div className="grid grid-cols-1 lg:grid-cols-4 min-h-96">
                        <div className="lg:col-span-1 bg-blue-50 p-4 border-r border-gray-200">
                            <h4 className="font-semibold text-blue-900 mb-3">üìå ÌïµÏã¨ ÏßàÎ¨∏</h4>
                            <div className="space-y-3">
                                {selectedConcept.myNotes?.keyPoints ? (
                                    selectedConcept.myNotes.keyPoints.map((point, index) => (
                                        <div key={index} className="text-sm text-blue-800">‚Ä¢ {point}ÎûÄ?</div>
                                    ))
                                ) : (
                                    <>
                                        <div className="text-sm text-blue-800">‚Ä¢ Ïù¥ Í∞úÎÖêÏùò Ï†ïÏùòÎäî?</div>
                                        <div className="text-sm text-blue-800">‚Ä¢ ÌïµÏã¨ ÌäπÏßïÏùÄ?</div>
                                        <div className="text-sm text-blue-800">‚Ä¢ Ïôú Ï§ëÏöîÌïúÍ∞Ä?</div>
                                        <div className="text-sm text-blue-800">‚Ä¢ Îã§Î•∏ Í∞úÎÖêÍ≥ºÏùò Í¥ÄÍ≥ÑÎäî?</div>
                                    </>
                                )}
                            </div>
                            <div className="mt-4 pt-3 border-t border-blue-200">
                                <textarea 
                                    placeholder="Ï∂îÍ∞Ä ÏßàÎ¨∏ÏùÑ ÏûëÏÑ±ÌïòÏÑ∏Ïöî..."
                                    className="w-full text-xs bg-white border border-blue-200 rounded p-2 resize-none"
                                    rows="3"
                                />
                            </div>
                        </div>
                        <div className="lg:col-span-3 p-4">
                            <div className="flex items-center justify-between mb-3">
                                <h4 className="font-semibold text-gray-900">{selectedConcept.title}</h4>
                                <div className="flex items-center space-x-2 text-xs text-gray-500">
                                    <span>{selectedConcept.pages}</span>
                                    {selectedConcept.lastStudied && (
                                        <span>‚Ä¢ ÎßàÏßÄÎßâ ÏàòÏ†ï: {selectedConcept.lastStudied}</span>
                                    )}
                                </div>
                            </div>
                            <div className="prose prose-sm max-w-none">
                                {selectedConcept.myNotes ? (
                                    <div className="space-y-4">
                                        <div>
                                            <h5 className="font-medium text-gray-800 mb-2">Í∞úÏöî</h5>
                                            <p className="text-gray-700 leading-relaxed">{selectedConcept.myNotes.summary}</p>
                                        </div>
                                        <div>
                                            <h5 className="font-medium text-gray-800 mb-2">ÏÉÅÏÑ∏ ÎÇ¥Ïö©</h5>
                                            <textarea 
                                                className="w-full border border-gray-200 rounded-lg p-3 text-sm resize-none"
                                                rows="8"
                                                placeholder="ÏÉÅÏÑ∏Ìïú ÏÑ§Î™Ö, ÏòàÏ†ú, ÏΩîÎìú Îì±ÏùÑ ÏûëÏÑ±ÌïòÏÑ∏Ïöî..."
                                                defaultValue="Ïù¥ Í∞úÎÖêÏóê ÎåÄÌïú Îçî ÏûêÏÑ∏Ìïú ÏÑ§Î™ÖÏùÑ Ïó¨Í∏∞Ïóê ÏûëÏÑ±Ìï† Ïàò ÏûàÏäµÎãàÎã§..."
                                            />
                                        </div>
                                    </div>
                                ) : (
                                    <div className="text-center text-gray-400 py-8">
                                        <p className="mb-4">ÏïÑÏßÅ ÏûëÏÑ±Îêú ÎÖ∏Ìä∏Í∞Ä ÏóÜÏäµÎãàÎã§.</p>
                                        <textarea 
                                            className="w-full border border-gray-200 rounded-lg p-3 text-sm resize-none"
                                            rows="10"
                                            placeholder="Ïù¥ Í∞úÎÖêÏóê ÎåÄÌï¥ ÌïôÏäµÌïú ÎÇ¥Ïö©ÏùÑ Ï†ïÎ¶¨Ìï¥Î≥¥ÏÑ∏Ïöî..."
                                        />
                                    </div>
                                )}
                            </div>
                        </div>
                    </div>
                    <div className="border-t border-gray-200 p-4 bg-gray-50">
                        <h4 className="font-semibold text-gray-900 mb-3">üí° ÌïµÏã¨ ÏöîÏïΩ & Í∞úÏù∏Ï†Å ÏÉùÍ∞Å</h4>
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
                            <div>
                                <h5 className="font-medium text-gray-700 mb-2">ÌïµÏã¨ ÏöîÏïΩ</h5>
                                {selectedConcept.myNotes?.summary ? (
                                    <p className="text-sm text-gray-700 bg-white p-3 rounded border">{selectedConcept.myNotes.summary}</p>
                                ) : (
                                    <textarea 
                                        className="w-full text-sm bg-white border border-gray-200 rounded p-3 resize-none"
                                        rows="3"
                                        placeholder="Ïù¥ Í∞úÎÖêÏùò ÌïµÏã¨ÏùÑ 3Ï§ÑÎ°ú ÏöîÏïΩÌï¥Î≥¥ÏÑ∏Ïöî..."
                                    />
                                )}
                            </div>
                            <div>
                                <h5 className="font-medium text-gray-700 mb-2">Í∞úÏù∏Ï†Å ÏÉùÍ∞Å</h5>
                                {selectedConcept.myNotes?.personalThoughts ? (
                                    <p className="text-sm text-gray-700 bg-yellow-50 p-3 rounded border italic">{selectedConcept.myNotes.personalThoughts}</p>
                                ) : (
                                    <textarea 
                                        className="w-full text-sm bg-yellow-50 border border-yellow-200 rounded p-3 resize-none"
                                        rows="3"
                                        placeholder="Ïù¥ Í∞úÎÖêÏóê ÎåÄÌïú Í∞úÏù∏Ï†ÅÏù∏ ÏÉùÍ∞ÅÏù¥ÎÇò ÎäêÎÇÄÏ†êÏùÑ Ï†ÅÏñ¥Î≥¥ÏÑ∏Ïöî..."
                                    />
                                )}
                            </div>
                        </div>
                    </div>
                </div>
            ) : (
                <div className="bg-gray-50 rounded-lg p-8 text-center text-gray-500">
                    <FileText className="w-12 h-12 mx-auto mb-4 opacity-50" />
                    <p>Í∞úÎÖêÏùÑ ÏÑ†ÌÉùÌïòÏó¨ ÏΩîÎÑ¨ÎÖ∏Ìä∏Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî.</p>
                </div>
            )}
        </div>
    );

    return (
        <div className="p-6 space-y-6 max-w-6xl mx-auto">
            <div className="flex space-x-1 bg-gray-100 p-1 rounded-lg">
                {[
                    { id: 'overview', label: 'Í∞úÏöî', icon: BookOpen },
                    { id: 'concepts', label: 'Í∞úÎÖê Î™©Î°ù', icon: Brain },
                    { id: 'mindmap', label: 'ÎßàÏù∏ÎìúÎßµ', icon: Target },
                    { id: 'cornell', label: 'ÏΩîÎÑ¨ÎÖ∏Ìä∏', icon: FileText }
                ].map((mode) => (
                    <button
                        key={mode.id}
                        onClick={() => setConceptMode(mode.id)}
                        className={`flex items-center px-3 py-2 rounded-md text-sm font-medium transition-all ${
                            conceptMode === mode.id
                                ? 'bg-white text-blue-600 shadow-sm'
                                : 'text-gray-600 hover:text-gray-900'
                        }`}
                    >
                        <mode.icon className="w-4 h-4 mr-1" />
                        {mode.label}
                    </button>
                ))}
            </div>
            {conceptMode === 'overview' && (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-100">
                        <div className="flex items-center justify-between mb-4">
                            <div>
                                <h3 className="text-lg font-semibold text-blue-900">üìö ÌïôÏäµ ÌòÑÌô©</h3>
                                <div className="flex items-center space-x-4 mt-1">
                                    <span className="text-sm text-blue-700">Ï¥ù {totalConcepts}Í∞ú</span>
                                    <span className="text-sm text-green-700">ÏôÑÎ£å {completedConcepts}Í∞ú</span>
                                    <span className="text-sm text-orange-700">ÌïôÏäµÏ§ë {studyingConcepts}Í∞ú</span>
                                    <div className="flex items-center space-x-2">
                                        <div className="w-16 bg-blue-200 rounded-full h-1.5">
                                            <div 
                                                className="bg-blue-600 h-1.5 rounded-full transition-all duration-300"
                                                style={{ width: `${overallProgress}%` }}
                                            ></div>
                                        </div>
                                        <span className="text-xs font-medium text-blue-600">{overallProgress}%</span>
                                    </div>
                                </div>
                            </div>
                            <div className="text-right">
                                <div className="text-2xl font-bold text-blue-900">üî• 3Ïùº</div>
                                <div className="text-xs text-blue-700">Ïó∞ÏÜç ÌïôÏäµ</div>
                            </div>
                        </div>
                        <div className="grid grid-cols-7 gap-2 mt-4">
                            {['Ïõî', 'Ìôî', 'Ïàò', 'Î™©', 'Í∏à', 'ÌÜ†', 'Ïùº'].map((day, index) => (
                                <div key={day} className="text-center">
                                    <div className="text-xs text-gray-600 mb-1">{day}</div>
                                    <div className={`h-8 rounded ${index < 5 ? 'bg-green-200' : index === 5 ? 'bg-blue-200' : 'bg-gray-200'}`}>
                                        <div className={`h-full rounded transition-all ${
                                            index < 3 ? 'bg-green-500' : index === 3 ? 'bg-blue-500' : ''
                                        }`} style={{ height: `${[80, 60, 90, 40, 0, 0, 0][index]}%` }}></div>
                                    </div>
                                    <div className="text-xs text-gray-500 mt-1">{[4, 3, 5, 2, 0, 0, 0][index]}</div>
                                </div>
                            ))}
                        </div>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <div className="bg-white rounded-xl p-5 border border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">üéØ Ïò§Îäò Ìï† Ïùº</h3>
                            <div className="space-y-3">
                                <div className="flex items-center justify-between p-3 bg-red-50 rounded-lg border border-red-200">
                                    <div className="flex items-center space-x-3">
                                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                                        <div>
                                            <div className="font-medium text-gray-900">Context Switching Î≥µÏäµ</div>
                                            <div className="text-sm text-gray-600">3Ïùº Ï†Ñ ÌïôÏäµ ¬∑ Î≥µÏäµ Í∂åÏû•</div>
                                        </div>
                                    </div>
                                    <button className="text-red-600 hover:text-red-800 text-sm font-medium">ÏãúÏûë</button>
                                </div>
                                <div className="flex items-center justify-between p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                                    <div className="flex items-center space-x-3">
                                        <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                                        <div>
                                            <div className="font-medium text-gray-900">Thread Pool Ï†ïÎ¶¨ÌïòÍ∏∞</div>
                                            <div className="text-sm text-gray-600">ÏïÑÏßÅ ÎÖ∏Ìä∏ ÏûëÏÑ± ÏïàÌï®</div>
                                        </div>
                                    </div>
                                    <button 
                                        onClick={() => {
                                            setSelectedConcept(concepts[2]);
                                            setConceptMode('cornell');
                                        }}
                                        className="text-yellow-600 hover:text-yellow-800 text-sm font-medium"
                                    >
                                        ÏûëÏÑ±
                                    </button>
                                </div>
                                <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200">
                                    <div className="flex items-center space-x-3">
                                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                                        <div>
                                            <div className="font-medium text-gray-900">Deadlock Prevention ÌïôÏäµ</div>
                                            <div className="text-sm text-gray-600">Îã§Ïùå Ï±ïÌÑ∞ ÏòàÏäµ</div>
                                        </div>
                                    </div>
                                    <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">ÏãúÏûë</button>
                                </div>
                            </div>
                        </div>
                        <div className="bg-white rounded-xl p-5 border border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">üí° ÌïôÏäµ Ïù∏ÏÇ¨Ïù¥Ìä∏</h3>
                            <div className="space-y-4">
                                <div className="p-3 bg-purple-50 rounded-lg">
                                    <div className="flex items-center space-x-2 mb-2">
                                        <div className="w-1.5 h-1.5 bg-purple-500 rounded-full"></div>
                                        <span className="text-sm font-medium text-purple-900">ÏµúÍ≥† ÏßëÏ§ë ÏãúÍ∞Ñ</span>
                                    </div>
                                    <p className="text-sm text-purple-700">ÌôîÏöîÏùº Ïò§ÌõÑ 2-4ÏãúÏóê Í∞ÄÏû• ÌôúÎ∞úÌïòÍ≤å ÌïôÏäµÌï¥Ïöî!</p>
                                </div>
                                <div className="p-3 bg-green-50 rounded-lg">
                                    <div className="flex items-center space-x-2 mb-2">
                                        <div className="w-1.5 h-1.5 bg-green-500 rounded-full"></div>
                                        <span className="text-sm font-medium text-green-900">ÌïôÏäµ Ìå®ÌÑ¥</span>
                                    </div>
                                    <p className="text-sm text-green-700">ÎèôÍ∏∞Ìôî Í¥ÄÎ†® Í∞úÎÖêÏóê ÌäπÌûà Í¥ÄÏã¨Ïù¥ ÎßéÏúºÏãúÎÑ§Ïöî.</p>
                                </div>
                                <div className="p-3 bg-orange-50 rounded-lg">
                                    <div className="flex items-center space-x-2 mb-2">
                                        <div className="w-1.5 h-1.5 bg-orange-500 rounded-full"></div>
                                        <span className="text-sm font-medium text-orange-900">Ï∂îÏ≤ú</span>
                                    </div>
                                    <p className="text-sm text-orange-700">PCB ‚Üí Context Switching ÏàúÏÑúÎ°ú Î≥µÏäµÌïòÎ©¥ Ìö®Í≥ºÏ†ÅÏùº Í±∞ÏòàÏöî!</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <div className="bg-white rounded-xl p-5 border border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">‚è∞ ÏµúÍ∑º ÌïôÏäµ</h3>
                            <div className="space-y-3">
                                {concepts.filter(c => c.lastStudied).slice(0, 3).map((concept) => (
                                    <div key={concept.id} className="flex items-center justify-between p-2 hover:bg-gray-50 rounded-lg cursor-pointer">
                                        <div>
                                            <div className="font-medium text-gray-900 text-sm">{concept.title}</div>
                                            <div className="text-xs text-gray-500">{concept.lastStudied}</div>
                                        </div>
                                        <button 
                                            onClick={() => {
                                                setSelectedConcept(concept);
                                                setConceptMode('cornell');
                                            }}
                                            className="text-blue-600 hover:text-blue-800 text-xs"
                                        >
                                            Ïù¥Ïñ¥ÌïòÍ∏∞
                                        </button>
                                    </div>
                                ))}
                            </div>
                        </div>
                        <div className="bg-white rounded-xl p-5 border border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">üîñ Ï¶êÍ≤®Ï∞æÍ∏∞</h3>
                            <div className="space-y-3">
                                <div className="flex items-center justify-between p-2 hover:bg-gray-50 rounded-lg cursor-pointer">
                                    <div>
                                        <div className="font-medium text-gray-900 text-sm">Process Control Block</div>
                                        <div className="text-xs text-gray-500">ÏûêÏ£º Ï∞∏Ï°∞ÌïòÎäî Í∞úÎÖê</div>
                                    </div>
                                    <button className="text-blue-600 hover:text-blue-800 text-xs">Î≥¥Í∏∞</button>
                                </div>
                                <div className="flex items-center justify-between p-2 hover:bg-gray-50 rounded-lg cursor-pointer">
                                    <div>
                                        <div className="font-medium text-gray-900 text-sm">Context Switching</div>
                                        <div className="text-xs text-gray-500">ÏôÑÎ£åÌïú Í∞úÎÖê</div>
                                    </div>
                                    <button className="text-blue-600 hover:text-blue-800 text-xs">Î≥¥Í∏∞</button>
                                </div>
                            </div>
                        </div>
                        <div className="bg-white rounded-xl p-5 border border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">üí≠ ÏµúÍ∑º ÏÉùÍ∞Å</h3>
                            <div className="space-y-3">
                                <div className="p-3 bg-yellow-50 rounded-lg border-l-3 border-yellow-400">
                                    <p className="text-sm text-gray-700 italic">"Ïò§Î≤ÑÌó§ÎìúÍ∞Ä ÌÅ¨ÎãàÍπå ÏµúÏ†ÅÌôîÍ∞Ä Ï§ëÏöîÌïòÍ≤†Îã§..."</p>
                                    <div className="text-xs text-gray-500 mt-1">Context Switching</div>
                                </div>
                                <div className="p-3 bg-yellow-50 rounded-lg border-l-3 border-yellow-400">
                                    <p className="text-sm text-gray-700 italic">"ÏΩîÎìúÎ°ú ÏßÅÏ†ë Íµ¨ÌòÑÌï¥Î≥¥Î©¥ÏÑú Ïù¥Ìï¥ÌïòÎäîÍ≤å Ï¢ãÏùÑ Í≤É Í∞ôÎã§."</p>
                                    <div className="text-xs text-gray-500 mt-1">Mutex vs Semaphore</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className="bg-white rounded-xl p-6 border border-gray-200">
                        <div className="flex items-center justify-between mb-4">
                            <h3 className="text-lg font-semibold text-gray-900">üéØ ÌïµÏã¨ ÌÇ§ÏõåÎìú</h3>
                            <button 
                                onClick={() => setShowConceptModal(true)}
                                className="bg-blue-600 text-white px-3 py-1 rounded-lg text-sm hover:bg-blue-700 transition-colors flex items-center"
                            >
                                <Plus className="w-3 h-3 mr-1" />
                                Í∞úÎÖê Ï∂îÍ∞Ä
                            </button>
                        </div>
                        <div className="flex flex-wrap gap-2">
                            {['Process Control Block', 'Context Switching', 'Thread Pool', 'Mutex', 'Semaphore', 'Deadlock', 'Synchronization', 'Process Management'].map((keyword) => (
                                <span key={keyword} className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm cursor-pointer hover:bg-blue-200 transition-colors">
                                    {keyword}
                                </span>
                            ))}
                        </div>
                    </div>
                </div>
            )}
            {conceptMode === 'concepts' && renderConceptList()}
            {conceptMode === 'mindmap' && renderConceptMindMap()}
            {conceptMode === 'cornell' && renderCornellNotes()}
            {showConceptModal && (
                <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                    <div className="bg-white rounded-lg p-6 w-96">
                        <h3 className="text-lg font-semibold mb-4">ÏÉà Í∞úÎÖê Ï∂îÍ∞Ä</h3>
                        <p className="text-gray-600 mb-4">Í∞úÎÖê Ï∂îÍ∞Ä Í∏∞Îä•ÏùÄ Íµ¨ÌòÑ ÏòàÏ†ïÏûÖÎãàÎã§.</p>
                        <button 
                            onClick={() => setShowConceptModal(false)}
                            className="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700"
                        >
                            Îã´Í∏∞
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
};

export default ConceptStudyComponent;
